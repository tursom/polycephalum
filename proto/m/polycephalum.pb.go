// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: polycephalum.proto

package m

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jump uint32 `protobuf:"varint,1,opt,name=jump,proto3" json:"jump,omitempty"`
	// Types that are assignable to Content:
	//
	//	*Msg_Handshake
	//	*Msg_HandshakeResponse
	//	*Msg_SyncNodeStateRequest
	//	*Msg_BroadcastMsg
	//	*Msg_ListenBroadcastBloom
	//	*Msg_AddBroadcastListen
	//	*Msg_SyncBroadcastMsg
	Content isMsg_Content `protobuf_oneof:"content"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{0}
}

func (x *Msg) GetJump() uint32 {
	if x != nil {
		return x.Jump
	}
	return 0
}

func (m *Msg) GetContent() isMsg_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Msg) GetHandshake() *Handshake {
	if x, ok := x.GetContent().(*Msg_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (x *Msg) GetHandshakeResponse() *HandshakeResponse {
	if x, ok := x.GetContent().(*Msg_HandshakeResponse); ok {
		return x.HandshakeResponse
	}
	return nil
}

func (x *Msg) GetSyncNodeStateRequest() *SyncNodeStateRequest {
	if x, ok := x.GetContent().(*Msg_SyncNodeStateRequest); ok {
		return x.SyncNodeStateRequest
	}
	return nil
}

func (x *Msg) GetBroadcastMsg() *BroadcastMsg {
	if x, ok := x.GetContent().(*Msg_BroadcastMsg); ok {
		return x.BroadcastMsg
	}
	return nil
}

func (x *Msg) GetListenBroadcastBloom() *ListenBroadcastBloom {
	if x, ok := x.GetContent().(*Msg_ListenBroadcastBloom); ok {
		return x.ListenBroadcastBloom
	}
	return nil
}

func (x *Msg) GetAddBroadcastListen() *AddBroadcastListen {
	if x, ok := x.GetContent().(*Msg_AddBroadcastListen); ok {
		return x.AddBroadcastListen
	}
	return nil
}

func (x *Msg) GetSyncBroadcastMsg() *SyncBroadcastMsg {
	if x, ok := x.GetContent().(*Msg_SyncBroadcastMsg); ok {
		return x.SyncBroadcastMsg
	}
	return nil
}

type isMsg_Content interface {
	isMsg_Content()
}

type Msg_Handshake struct {
	Handshake *Handshake `protobuf:"bytes,10000,opt,name=Handshake,proto3,oneof"`
}

type Msg_HandshakeResponse struct {
	HandshakeResponse *HandshakeResponse `protobuf:"bytes,10001,opt,name=handshakeResponse,proto3,oneof"`
}

type Msg_SyncNodeStateRequest struct {
	SyncNodeStateRequest *SyncNodeStateRequest `protobuf:"bytes,2,opt,name=syncNodeStateRequest,proto3,oneof"`
}

type Msg_BroadcastMsg struct {
	BroadcastMsg *BroadcastMsg `protobuf:"bytes,3,opt,name=broadcastMsg,proto3,oneof"`
}

type Msg_ListenBroadcastBloom struct {
	ListenBroadcastBloom *ListenBroadcastBloom `protobuf:"bytes,4,opt,name=listenBroadcastBloom,proto3,oneof"`
}

type Msg_AddBroadcastListen struct {
	AddBroadcastListen *AddBroadcastListen `protobuf:"bytes,5,opt,name=addBroadcastListen,proto3,oneof"`
}

type Msg_SyncBroadcastMsg struct {
	SyncBroadcastMsg *SyncBroadcastMsg `protobuf:"bytes,6,opt,name=syncBroadcastMsg,proto3,oneof"`
}

func (*Msg_Handshake) isMsg_Content() {}

func (*Msg_HandshakeResponse) isMsg_Content() {}

func (*Msg_SyncNodeStateRequest) isMsg_Content() {}

func (*Msg_BroadcastMsg) isMsg_Content() {}

func (*Msg_ListenBroadcastBloom) isMsg_Content() {}

func (*Msg_AddBroadcastListen) isMsg_Content() {}

func (*Msg_SyncBroadcastMsg) isMsg_Content() {}

type Handshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed []byte `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{1}
}

func (x *Handshake) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

type HandshakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sign []byte `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *HandshakeResponse) Reset() {
	*x = HandshakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeResponse) ProtoMessage() {}

func (x *HandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeResponse.ProtoReflect.Descriptor instead.
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{2}
}

func (x *HandshakeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HandshakeResponse) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

type NodeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State uint32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Jump  uint32 `protobuf:"varint,3,opt,name=jump,proto3" json:"jump,omitempty"`
}

func (x *NodeState) Reset() {
	*x = NodeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState) ProtoMessage() {}

func (x *NodeState) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState.ProtoReflect.Descriptor instead.
func (*NodeState) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{3}
}

func (x *NodeState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeState) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *NodeState) GetJump() uint32 {
	if x != nil {
		return x.Jump
	}
	return 0
}

// no need to response
type SyncNodeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*NodeState `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *SyncNodeStateRequest) Reset() {
	*x = SyncNodeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncNodeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncNodeStateRequest) ProtoMessage() {}

func (x *SyncNodeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncNodeStateRequest.ProtoReflect.Descriptor instead.
func (*SyncNodeStateRequest) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{4}
}

func (x *SyncNodeStateRequest) GetStates() []*NodeState {
	if x != nil {
		return x.States
	}
	return nil
}

type BroadcastMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string   `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Source    string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target    []string `protobuf:"bytes,3,rep,name=target,proto3" json:"target,omitempty"`
	Channel   []byte   `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Message   []byte   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BroadcastMsg) Reset() {
	*x = BroadcastMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastMsg) ProtoMessage() {}

func (x *BroadcastMsg) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastMsg.ProtoReflect.Descriptor instead.
func (*BroadcastMsg) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{5}
}

func (x *BroadcastMsg) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BroadcastMsg) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *BroadcastMsg) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *BroadcastMsg) GetChannel() []byte {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *BroadcastMsg) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

// *
// 用于向四周广播本节点监听的广播 channel 的布隆过滤器
type ListenBroadcastBloom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node    string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Version uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Bloom   []byte `protobuf:"bytes,3,opt,name=bloom,proto3" json:"bloom,omitempty"`
}

func (x *ListenBroadcastBloom) Reset() {
	*x = ListenBroadcastBloom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenBroadcastBloom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenBroadcastBloom) ProtoMessage() {}

func (x *ListenBroadcastBloom) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenBroadcastBloom.ProtoReflect.Descriptor instead.
func (*ListenBroadcastBloom) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{6}
}

func (x *ListenBroadcastBloom) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ListenBroadcastBloom) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListenBroadcastBloom) GetBloom() []byte {
	if x != nil {
		return x.Bloom
	}
	return nil
}

type AddBroadcastListen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node    string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Version uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Channel [][]byte `protobuf:"bytes,3,rep,name=channel,proto3" json:"channel,omitempty"`
}

func (x *AddBroadcastListen) Reset() {
	*x = AddBroadcastListen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBroadcastListen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBroadcastListen) ProtoMessage() {}

func (x *AddBroadcastListen) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBroadcastListen.ProtoReflect.Descriptor instead.
func (*AddBroadcastListen) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{7}
}

func (x *AddBroadcastListen) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *AddBroadcastListen) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AddBroadcastListen) GetChannel() [][]byte {
	if x != nil {
		return x.Channel
	}
	return nil
}

type SyncBroadcastMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*SyncBroadcastMsg_Snapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
}

func (x *SyncBroadcastMsg) Reset() {
	*x = SyncBroadcastMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncBroadcastMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncBroadcastMsg) ProtoMessage() {}

func (x *SyncBroadcastMsg) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncBroadcastMsg.ProtoReflect.Descriptor instead.
func (*SyncBroadcastMsg) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{8}
}

func (x *SyncBroadcastMsg) GetSnapshots() []*SyncBroadcastMsg_Snapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type SyncBroadcastMsg_Snapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node    string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Version uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Hash    uint32 `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *SyncBroadcastMsg_Snapshot) Reset() {
	*x = SyncBroadcastMsg_Snapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polycephalum_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncBroadcastMsg_Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncBroadcastMsg_Snapshot) ProtoMessage() {}

func (x *SyncBroadcastMsg_Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_polycephalum_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncBroadcastMsg_Snapshot.ProtoReflect.Descriptor instead.
func (*SyncBroadcastMsg_Snapshot) Descriptor() ([]byte, []int) {
	return file_polycephalum_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SyncBroadcastMsg_Snapshot) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *SyncBroadcastMsg_Snapshot) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SyncBroadcastMsg_Snapshot) GetHash() uint32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

var File_polycephalum_proto protoreflect.FileDescriptor

var file_polycephalum_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73, 0x6f, 0x6d, 0x2e,
	0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x22, 0x8e, 0x05, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x12, 0x42, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x90, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73, 0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70,
	0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x5a, 0x0a, 0x11,
	0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75,
	0x72, 0x73, 0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75,
	0x6d, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x14, 0x73, 0x79, 0x6e, 0x63,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73,
	0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0c,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73, 0x6f, 0x6d, 0x2e, 0x70,
	0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x62, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73,
	0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x5c, 0x0a, 0x12,
	0x61, 0x64, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75,
	0x72, 0x73, 0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75,
	0x6d, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x61, 0x64, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x56, 0x0a, 0x10, 0x73, 0x79,
	0x6e, 0x63, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73, 0x6f, 0x6d,
	0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x79, 0x6e, 0x63, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x0a,
	0x09, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x37,
	0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x45, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x75,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x22, 0x51,
	0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73,
	0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d,
	0x22, 0x5c, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xb1,
	0x01, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6e, 0x2e, 0x74, 0x75, 0x72, 0x73,
	0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x63, 0x65, 0x70, 0x68, 0x61, 0x6c, 0x75, 0x6d, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x73, 0x1a, 0x4c, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x42, 0x07, 0x48, 0x01, 0x5a, 0x03, 0x2e, 0x2f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_polycephalum_proto_rawDescOnce sync.Once
	file_polycephalum_proto_rawDescData = file_polycephalum_proto_rawDesc
)

func file_polycephalum_proto_rawDescGZIP() []byte {
	file_polycephalum_proto_rawDescOnce.Do(func() {
		file_polycephalum_proto_rawDescData = protoimpl.X.CompressGZIP(file_polycephalum_proto_rawDescData)
	})
	return file_polycephalum_proto_rawDescData
}

var file_polycephalum_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_polycephalum_proto_goTypes = []interface{}{
	(*Msg)(nil),                       // 0: cn.tursom.polycephalum.Msg
	(*Handshake)(nil),                 // 1: cn.tursom.polycephalum.Handshake
	(*HandshakeResponse)(nil),         // 2: cn.tursom.polycephalum.HandshakeResponse
	(*NodeState)(nil),                 // 3: cn.tursom.polycephalum.NodeState
	(*SyncNodeStateRequest)(nil),      // 4: cn.tursom.polycephalum.SyncNodeStateRequest
	(*BroadcastMsg)(nil),              // 5: cn.tursom.polycephalum.BroadcastMsg
	(*ListenBroadcastBloom)(nil),      // 6: cn.tursom.polycephalum.ListenBroadcastBloom
	(*AddBroadcastListen)(nil),        // 7: cn.tursom.polycephalum.AddBroadcastListen
	(*SyncBroadcastMsg)(nil),          // 8: cn.tursom.polycephalum.SyncBroadcastMsg
	(*SyncBroadcastMsg_Snapshot)(nil), // 9: cn.tursom.polycephalum.SyncBroadcastMsg.Snapshot
}
var file_polycephalum_proto_depIdxs = []int32{
	1, // 0: cn.tursom.polycephalum.Msg.Handshake:type_name -> cn.tursom.polycephalum.Handshake
	2, // 1: cn.tursom.polycephalum.Msg.handshakeResponse:type_name -> cn.tursom.polycephalum.HandshakeResponse
	4, // 2: cn.tursom.polycephalum.Msg.syncNodeStateRequest:type_name -> cn.tursom.polycephalum.SyncNodeStateRequest
	5, // 3: cn.tursom.polycephalum.Msg.broadcastMsg:type_name -> cn.tursom.polycephalum.BroadcastMsg
	6, // 4: cn.tursom.polycephalum.Msg.listenBroadcastBloom:type_name -> cn.tursom.polycephalum.ListenBroadcastBloom
	7, // 5: cn.tursom.polycephalum.Msg.addBroadcastListen:type_name -> cn.tursom.polycephalum.AddBroadcastListen
	8, // 6: cn.tursom.polycephalum.Msg.syncBroadcastMsg:type_name -> cn.tursom.polycephalum.SyncBroadcastMsg
	3, // 7: cn.tursom.polycephalum.SyncNodeStateRequest.states:type_name -> cn.tursom.polycephalum.NodeState
	9, // 8: cn.tursom.polycephalum.SyncBroadcastMsg.snapshots:type_name -> cn.tursom.polycephalum.SyncBroadcastMsg.Snapshot
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_polycephalum_proto_init() }
func file_polycephalum_proto_init() {
	if File_polycephalum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_polycephalum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncNodeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenBroadcastBloom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBroadcastListen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncBroadcastMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polycephalum_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncBroadcastMsg_Snapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_polycephalum_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Msg_Handshake)(nil),
		(*Msg_HandshakeResponse)(nil),
		(*Msg_SyncNodeStateRequest)(nil),
		(*Msg_BroadcastMsg)(nil),
		(*Msg_ListenBroadcastBloom)(nil),
		(*Msg_AddBroadcastListen)(nil),
		(*Msg_SyncBroadcastMsg)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_polycephalum_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_polycephalum_proto_goTypes,
		DependencyIndexes: file_polycephalum_proto_depIdxs,
		MessageInfos:      file_polycephalum_proto_msgTypes,
	}.Build()
	File_polycephalum_proto = out.File
	file_polycephalum_proto_rawDesc = nil
	file_polycephalum_proto_goTypes = nil
	file_polycephalum_proto_depIdxs = nil
}
