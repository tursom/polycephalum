syntax = "proto3";

package cn.tursom.polycephalum;

option optimize_for = SPEED;

option go_package = "./m";

message Msg {
  uint32 jump = 1;

  oneof content {
    Handshake Handshake = 10000;
    HandshakeResponse handshakeResponse = 10001;

    SyncNodeStateRequest syncNodeStateRequest = 2;

    BroadcastMsg broadcastMsg = 3;
    ListenBroadcastBloom listenBroadcastBloom = 4;
    AddBroadcastListen addBroadcastListen = 5;
    SyncBroadcastMsg syncBroadcastMsg = 6;
  }
}

message Handshake {
  bytes seed = 1;
}

message HandshakeResponse {
  string id = 1 ;
  bytes sign = 2 ;
}

message NodeState {
  string id = 1;
  uint32 state = 2;
  uint32 jump = 3;
}

// no need to response
message SyncNodeStateRequest {
  repeated NodeState states = 1;
}

message BroadcastMsg {
  string requestId = 1;
  string source = 2;
  repeated string target = 3;
  bytes channel = 4;
  bytes message = 5;
}

/**
 * 用于向四周广播本节点监听的广播 channel 的布隆过滤器
 */
message ListenBroadcastBloom {
  string node = 1;
  uint32 version = 2;
  bytes bloom = 3;
}

message AddBroadcastListen {
  string node = 1;
  uint32 version = 2;
  repeated bytes channel = 3;
}

message SyncBroadcastMsg {
  message Snapshot {
    string node = 1;
    uint32 version = 2;
    uint32 hash = 3;
  }

  repeated Snapshot snapshots = 1;
}
